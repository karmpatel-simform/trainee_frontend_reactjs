name: CD - Terraform & Deploy Static Site

on:
  workflow_run:
    workflows: ["CI - Build Static Site"]
    types: [completed]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      BUILD_VERSION: ${{ github.event.workflow_run.outputs.build_version }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: static-site-build-${{ env.BUILD_VERSION }}
          path: ./dist

      - name: Checkout Terraform code
        uses: actions/checkout@v3
        with:
          path: terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Azure CLI Login with ARM credentials
        run: |
          az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

      - name: Terraform Init
        working-directory: terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve

      - name: Get Terraform Outputs
        id: tf_outputs
        working-directory: terraform
        run: |
          echo "account_name=$(terraform output -raw storage_account_name)" >> $GITHUB_OUTPUT
          echo "account_key=$(terraform output -raw storage_account_primary_access_key)" >> $GITHUB_OUTPUT

      - name: Deploy static files to Azure Blob Storage
        run: |
          az storage blob upload-batch \
            --account-name ${{ steps.tf_outputs.outputs.account_name }} \
            --account-key ${{ steps.tf_outputs.outputs.account_key }} \
            --source ./dist \
            --destination '$web' \
            --overwrite
